@page "/seeder"

@using Euro_2024_Management_System.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Globalization

@attribute [Authorize]
@inject HttpClient Http

<div style="max-width: 600px; margin: auto;">
    <h3 class="text-center">Wstaw mecz</h3>

    <EditForm Model="@newMatch" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="homeTeamId">ID Drużyna Gospodarzy:</label>
            <select id="homeTeamId" class="form-control" @bind="newMatch.HomeTeamId">
                <option value="">Wybierz drużynę</option>
                @foreach (var team in teams)
                {
                    <option value="@team.Id">@team.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="awayTeamId">ID Drużyna Gości:</label>
            <select id="awayTeamId" class="form-control" @bind="newMatch.AwayTeamId">
                <option value="">Wybierz drużynę</option>
                @foreach (var team in teams)
                {
                    <option value="@team.Id">@team.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Runda:</label>
            <InputNumber class="form-control" @bind-Value="newMatch.Round" />
        </div>
        <div class="form-group">
            <label>Data Meczu:</label>
            <InputDate class="form-control" @bind-Value="newMatch.MatchDate" />
        </div>
        <div class="form-group">
            <label for="matchTime">Godzina Meczu:</label>
            <input type="text" id="matchTime" class="form-control" @bind="matchTimeString" />
        </div>
        <div class="form-group">
            <label>Czy zakończony:</label>
            <InputCheckbox @bind-Value="newMatch.IsFinished" />
        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-primary">Dodaj mecz</button>
        </div>
    </EditForm>
</div>


@code {
    private Match newMatch = new Match();
    private List<Team> teams = new List<Team>();

    private string matchTimeString = "";

    protected override async Task OnInitializedAsync()
    {
        teams = await Http.GetFromJsonAsync<List<Team>>("api/team");
    }

    private async Task HandleValidSubmit()
    {
        newMatch.MatchTime = TimeSpan.Parse(matchTimeString);
        var response = await Http.PostAsJsonAsync("api/match", newMatch);

        if (response.IsSuccessStatusCode)
        {
            newMatch = new Match() { MatchDate = new DateTime(2024, 06, 15) };
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Błąd podczas dodawania meczu");
        }
    }
}
